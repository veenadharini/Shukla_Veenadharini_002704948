/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ui;

import java.awt.Color;
import javax.swing.*;
import java.sql.*;
import model.City;
import java.util.*;
import java.util.regex.Pattern;
//import java.sql.Connection;
//import java.sql.DriverManager;

/**
 *
 * @author Veenadharini
 */
public class SignupFrame extends javax.swing.JFrame {

    /**
     * Creates new form SignupFrame
     */
    public SignupFrame() {
        initComponents();
        //BindCombo();
        //fill_combo();
        Color c = new Color(153,204,255);
        getContentPane().setBackground(c);
        
        
    }
    
    
    
//    public void fill_combo(){
//        
//        try{
//            Class.forName("com.mysql.jdbc.Driver");
//            Connection conn = (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3307/hospital","root","");
//            String sql = "Select distinct city_name from city";
//            
//            Statement st = conn.createStatement();
//            PreparedStatement pst = conn.prepareStatement(sql);
//            ResultSet rs = st.executeQuery(sql);
//            
//            while(rs.next()){
//                ComboCity.addItem(rs.getString("city_name"));
//            }
//            
//
//        }
//        catch(Exception e){
//            JOptionPane.showMessageDialog(null,e);
//        }
//    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titlePanel = new javax.swing.JPanel();
        lblTitle = new javax.swing.JLabel();
        lblEmail = new javax.swing.JLabel();
        lblMobile = new javax.swing.JLabel();
        lblGender = new javax.swing.JLabel();
        lblCity = new javax.swing.JLabel();
        lblCommunity = new javax.swing.JLabel();
        lblAddress = new javax.swing.JLabel();
        lblPassword = new javax.swing.JLabel();
        txtname = new javax.swing.JTextField();
        txtUsername = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        txtMobile = new javax.swing.JTextField();
        comboGender = new javax.swing.JComboBox<>();
        ComboCity = new javax.swing.JComboBox<>();
        PassPwd = new javax.swing.JPasswordField();
        ComboComm = new javax.swing.JComboBox<>();
        lblName = new javax.swing.JLabel();
        lblID = new javax.swing.JLabel();
        ComboBloodGrp = new javax.swing.JComboBox<>();
        lblUserRole = new javax.swing.JLabel();
        CombouserRole = new javax.swing.JComboBox<>();
        bttnSubmit = new javax.swing.JButton();
        lblAge = new javax.swing.JLabel();
        lblBloodGrp = new javax.swing.JLabel();
        txtAge = new javax.swing.JTextField();
        bttnLogin = new javax.swing.JButton();
        ComboAdd = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        titlePanel.setBackground(new java.awt.Color(0, 51, 102));

        lblTitle.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lblTitle.setForeground(new java.awt.Color(255, 255, 255));
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("Sign up Form");

        javax.swing.GroupLayout titlePanelLayout = new javax.swing.GroupLayout(titlePanel);
        titlePanel.setLayout(titlePanelLayout);
        titlePanelLayout.setHorizontalGroup(
            titlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(titlePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitle, javax.swing.GroupLayout.DEFAULT_SIZE, 588, Short.MAX_VALUE)
                .addContainerGap())
        );
        titlePanelLayout.setVerticalGroup(
            titlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, titlePanelLayout.createSequentialGroup()
                .addContainerGap(39, Short.MAX_VALUE)
                .addComponent(lblTitle)
                .addGap(38, 38, 38))
        );

        lblEmail.setText("Email:");

        lblMobile.setText("Mobile:");

        lblGender.setText("Gender:");

        lblCity.setText("City:");

        lblCommunity.setText("Community:");

        lblAddress.setText("Address:");

        lblPassword.setText("Password:");

        txtname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtnameActionPerformed(evt);
            }
        });

        txtUsername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUsernameActionPerformed(evt);
            }
        });

        txtEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmailActionPerformed(evt);
            }
        });

        txtMobile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMobileActionPerformed(evt);
            }
        });

        comboGender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choose Gender..", "Male", "Female", "Others", "Do not wish to Specify" }));

        ComboCity.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choose city..", "Boston", "New York" }));
        ComboCity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboCityActionPerformed(evt);
            }
        });

        ComboComm.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choose Community..", "Allston", "Back Bay", "Brooklyn Heights", "East Village" }));
        ComboComm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboCommActionPerformed(evt);
            }
        });

        lblName.setText("Name:");

        lblID.setText("Username");

        ComboBloodGrp.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choose Blood Group..", "A+", "A-", "B+", "B-", "AB+", "AB-", "O+", "O-" }));

        lblUserRole.setText("User Role:");

        CombouserRole.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choose Role..", "Patient", "Doctor" }));

        bttnSubmit.setText("Submit");
        bttnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttnSubmitActionPerformed(evt);
            }
        });

        lblAge.setText("Age:");

        lblBloodGrp.setText("Blood Group:");

        txtAge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAgeActionPerformed(evt);
            }
        });

        bttnLogin.setText("Log in");
        bttnLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttnLoginActionPerformed(evt);
            }
        });

        ComboAdd.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choose house..", "House no. 1", "House no. 2", "House no. 3", "House no. 4", "House no. 5", "House no. 6", "House no. 7", "House no. 8", "House no. 9", "House no. 10", "House no. 11", "House no. 12", "House no. 13", "House no. 14", "House no. 15", "House no. 16", "House no. 17", "House no. 18", "House no. 19", "House no. 20" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(titlePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblGender)
                    .addComponent(lblPassword)
                    .addComponent(lblAddress)
                    .addComponent(lblCommunity)
                    .addComponent(lblCity)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblEmail)
                            .addComponent(lblMobile)
                            .addComponent(lblID)
                            .addComponent(lblName))
                        .addGap(2, 2, 2)))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(comboGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ComboCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ComboComm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtMobile)
                            .addComponent(txtEmail)
                            .addComponent(txtUsername)
                            .addComponent(txtname)
                            .addComponent(PassPwd, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(bttnLogin)
                                .addGap(49, 49, 49)
                                .addComponent(bttnSubmit)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblUserRole, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblAge, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblBloodGrp, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtAge, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(CombouserRole, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(ComboBloodGrp, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(29, 29, 29))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(ComboAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(titlePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblName))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblID)
                            .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblEmail)
                            .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblBloodGrp))
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblMobile)
                            .addComponent(txtMobile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblGender)
                            .addComponent(comboGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblCity)
                            .addComponent(ComboCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblCommunity)
                            .addComponent(ComboComm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblAddress)
                            .addComponent(ComboAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblPassword)
                            .addComponent(PassPwd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(CombouserRole, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblUserRole))
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblAge))
                        .addGap(18, 18, 18)
                        .addComponent(ComboBloodGrp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bttnSubmit)
                    .addComponent(bttnLogin))
                .addGap(35, 35, 35))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtnameActionPerformed

    private void txtUsernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUsernameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUsernameActionPerformed

    private void txtEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEmailActionPerformed

    private void txtMobileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMobileActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMobileActionPerformed

    private void ComboCityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboCityActionPerformed
        // TODO add your handling code here:
//        String city = ComboCity.getSelectedItem().toString();
//        try{
//            Class.forName("com.mysql.jdbc.Driver");
//            Connection conn = (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3307/hospital","root","");
//            String sql = "Select distinct community from city where city_name='"+city+"'";
//            Statement st = conn.createStatement();
//            PreparedStatement pst = conn.prepareStatement(sql);
//            ResultSet rs = st.executeQuery(sql);
//            
//            while(rs.next()){
//                ComboComm.removeAllItems();
//                ComboComm.addItem(rs.getString("community"));
//                ComboComm.setSelectedItem(null);
//            }
//            
//
//        }
//        catch(Exception e){
//            JOptionPane.showMessageDialog(null,e);
//        }
//******************
//        if(ComboCity.getSelectedItem().toString().equals("Boston"))
//        {
//            //ComboComm.removeAllItems();
//            ComboComm.addItem("Allston");
//            ComboComm.addItem("Back Bay");
//            //ComboComm.setSelectedItem(null);
//            
//            
//        }
//        else
//        if(ComboCity.getSelectedItem().toString().equals("New York"))
//        {
//            //ComboComm.removeAllItems();
//            ComboComm.addItem("Brooklyn Heights");
//            ComboComm.addItem("East Village");
//            //ComboComm.setSelectedItem(null);
//            
//            
//        }
    }//GEN-LAST:event_ComboCityActionPerformed

    private void bttnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttnSubmitActionPerformed
        
        String match = "";
        String match1 = "";
        
        if(txtname.getText().equals("")) {
        JOptionPane.showMessageDialog(null,"Name Required");
        txtname.requestFocus();
        return;
        }
        else if(Pattern.matches("[a-zA-Z ]+", txtname.getText())){
        match = "1";        
        }
       
        else if(match.equals("")){
        JOptionPane.showMessageDialog(null,"Name should Only be in Alphabets");
        txtname.requestFocus();
        return;
        }
        if(txtUsername.getText().equals("")) {
        JOptionPane.showMessageDialog(null,"Username Required");
        txtUsername.requestFocus();
        return;
        }
        if(txtMobile.getText().equals("")) {
        JOptionPane.showMessageDialog(null,"Mobile no. Required");
        txtMobile.requestFocus();
        return;
        }
        if(Pattern.matches("[0-9]{10}+", txtMobile.getText())){
        match1 = "1";        
        }
       
        if(match1.equals("")){
        JOptionPane.showMessageDialog(null,"Mobile no. should be 10 digits");
        txtMobile.requestFocus();
        return;
        }
        if(txtEmail.getText().equals("")) {
        JOptionPane.showMessageDialog(null,"Email Required");
        txtEmail.requestFocus();
        return;
        }
        if(Pattern.matches("^[A-Za-z0-9+_.-]+@(.+)$", txtEmail.getText())){
        match1 = "1";        
        }
       
        if(match1.equals("")){
        JOptionPane.showMessageDialog(null,"Invalid email");
        txtEmail.requestFocus();
        return;
        }
        if(PassPwd.getText().equals("")) {
        JOptionPane.showMessageDialog(null,"Password Required");
        PassPwd.requestFocus();
        return;
        }
        if(txtAge.getText().equals("")) {
        JOptionPane.showMessageDialog(null,"Age Required");
        txtAge.requestFocus();
        return;
        }
       
        if(Pattern.matches("[0-9]{1,3}+", txtAge.getText())){
        match1 = "1";        
        }
       
        if(match1.equals("")){
        JOptionPane.showMessageDialog(null,"Age cannot be more than 100 years");
        txtAge.requestFocus();
        return;
        
        
        }
        
        
        
        
        String role = CombouserRole.getSelectedItem().toString();
        String gender = comboGender.getSelectedItem().toString();
        String bloodgrp = ComboBloodGrp.getSelectedItem().toString();
        String city = ComboCity.getSelectedItem().toString();
        String comm = ComboComm.getSelectedItem().toString();
        String add = ComboAdd.getSelectedItem().toString();
        
        try{
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3307/hospital","root","");
            String sql = "insert into patient_records values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";//18
            String sql2 = "insert into doctor_records values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";//15
            String sql1 ="insert into user_login values(?,?,?,?)";
            PreparedStatement ps = conn.prepareStatement(sql);
            PreparedStatement ps1 = conn.prepareStatement(sql1);
            PreparedStatement ps2 = conn.prepareStatement(sql2);
            
            if (role.equals("Patient")){
            ps.setInt(1,0);
            ps.setString(2,role);
            ps.setString(3,txtUsername.getText());
            ps.setString(4,txtname.getText());
            ps.setString(5, txtAge.getText());
            ps.setString(6, gender);
            ps.setString(7, bloodgrp);
            ps.setString(8,txtMobile.getText());
            ps.setString(9,txtEmail.getText());
            ps.setString(10,city);
            ps.setString(11, comm);
            ps.setString(12,add);
            ps.setString(13,PassPwd.getText());
            ps.setString(14, "");
            ps.setString(15, "");
            ps.setString(16, "");
            ps.setString(17, "");
            ps.setString(18, "");
            ps.executeUpdate();  
            }
            
           
                ps1.setInt(1,0);
                ps1.setString(2,role);
                ps1.setString(3,txtUsername.getText());
                ps1.setString(4,PassPwd.getText());
                ps1.executeUpdate();
            
            if (role.equals("Doctor")){
            ps2.setInt(1,0);
            ps2.setString(2,role);
            ps2.setString(3,txtUsername.getText());
            ps2.setString(4,txtname.getText());
            ps2.setString(5, txtAge.getText());
            ps2.setString(6, gender);
            ps2.setString(7, bloodgrp);
            ps2.setString(8,txtMobile.getText());
            ps2.setString(9,txtEmail.getText());
            ps2.setString(10,city);
            ps2.setString(11, comm);
            ps2.setString(12,add);
            ps2.setString(13,PassPwd.getText());
            ps2.setInt(14, 0);
            ps2.setString(15,"");
            ps2.setString(16,"");
            ps2.setString(17,"");
            ps2.executeUpdate();
            }
            JOptionPane.showMessageDialog(null, "You have signed up successfully");
            conn.close();
            
            txtUsername.setText("");
            txtname.setText("");
            txtAge.setText("");
            txtMobile.setText("");
            txtEmail.setText("");
            //txtAddress.setText("");
            PassPwd.setText("");
            ComboBloodGrp.setSelectedIndex(0);
            ComboCity.setSelectedIndex(0);
            ComboComm.setSelectedIndex(-1);
            ComboAdd.setSelectedIndex(-1);
            comboGender.setSelectedIndex(0);
            CombouserRole.setSelectedIndex(0);
            
            
            
        }
        
        
        catch(Exception e){
            JOptionPane.showMessageDialog(null,e);
        }
    }//GEN-LAST:event_bttnSubmitActionPerformed

    private void txtAgeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAgeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAgeActionPerformed

    private void bttnLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttnLoginActionPerformed
        LoginFrame login = new LoginFrame();
        login.setVisible(true);
        dispose();
    }//GEN-LAST:event_bttnLoginActionPerformed

    private void ComboCommActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboCommActionPerformed
        
//        ComboComm.removeAllItems();
//        MyQuery mq = new MyQuery();
//        ArrayList<City> list = mq.getData(ComboCity.getSelectedItem().toString());
//        for(int i = 0; i < list.size(); i++){
//            ComboComm.addItem(list.get(i).getCommunity());
//        } 
        
        
        //try{
//            if(ComboComm.getSelectedItem().toString().equals("Allston"))
//            {
//               //ComboAdd.removeAllItems();
//               ComboAdd.addItem("House no.1");
//               ComboAdd.addItem("House no.2");
//               ComboAdd.addItem("House no.3");
//               ComboAdd.addItem("House no.4");
//               ComboAdd.addItem("House no.5");
//               //ComboAdd.setSelectedItem(null);
//               
//            }
//           if(ComboComm.getSelectedItem().toString().equals("Back Bay"))
//            {
//               //ComboAdd.removeAllItems();
//               ComboAdd.addItem("House no.6");
//               ComboAdd.addItem("House no.7");
//               ComboAdd.addItem("House no.8");
//               ComboAdd.addItem("House no.9");
//               ComboAdd.addItem("House no.10"); 
//               //ComboAdd.setSelectedItem(null);
//            }
//            if(ComboComm.getSelectedItem().toString().equals("Brooklyn Heights"))
//            {
//               //ComboAdd.removeAllItems();
//               ComboAdd.addItem("House no.11");
//               ComboAdd.addItem("House no.12");
//               ComboAdd.addItem("House no.13");
//               ComboAdd.addItem("House no.14");
//               ComboAdd.addItem("House no.15");
//               //ComboAdd.setSelectedItem(null);
//            }
//            if(ComboComm.getSelectedItem().toString().equals("East Village"))
//            {
//               //ComboAdd.removeAllItems();
//               ComboAdd.addItem("House no.16");
//               ComboAdd.addItem("House no.17");
//               ComboAdd.addItem("House no.18");
//               ComboAdd.addItem("House no.19");
//               ComboAdd.addItem("House no.20");
//               //ComboAdd.setSelectedItem(null);
//            }
//       // }
////        catch(Exception e){
////            System.out.print(e);
////        }
    }//GEN-LAST:event_ComboCommActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SignupFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SignupFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SignupFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SignupFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SignupFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> ComboAdd;
    private javax.swing.JComboBox<String> ComboBloodGrp;
    private javax.swing.JComboBox<String> ComboCity;
    public static javax.swing.JComboBox<String> ComboComm;
    private javax.swing.JComboBox<String> CombouserRole;
    private javax.swing.JPasswordField PassPwd;
    private javax.swing.JButton bttnLogin;
    private javax.swing.JButton bttnSubmit;
    private javax.swing.JComboBox<String> comboGender;
    private javax.swing.JLabel lblAddress;
    private javax.swing.JLabel lblAge;
    private javax.swing.JLabel lblBloodGrp;
    private javax.swing.JLabel lblCity;
    private javax.swing.JLabel lblCommunity;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblGender;
    private javax.swing.JLabel lblID;
    private javax.swing.JLabel lblMobile;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblUserRole;
    private javax.swing.JPanel titlePanel;
    private javax.swing.JTextField txtAge;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtMobile;
    private javax.swing.JTextField txtUsername;
    private javax.swing.JTextField txtname;
    // End of variables declaration//GEN-END:variables
}
//    public void BindCombo() {
//        
//        try {
//        Class.forName("com.mysql.jdbc.Driver");
//        Connection conn = (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3307/hospital","root","");
//        Statement st = conn.createStatement();
//        String sql ="SELECT distinct city_name` FROM `city`";
//        ResultSet rs = st.executeQuery(sql);
//        
//        while(rs.next()){
//            ComboCity.addItem(rs.getString("city_name"));
//        }
//        }
//        catch (Exception e) {
//    JOptionPane.showMessageDialog(null,e);
//    }
//    }
//
//    public class MyQuery {
//
//            
//        public Connection getConnection(){
//        Connection con = null;
//        try {
//            con = DriverManager.getConnection("jdbc:mysql://localhost:3307/hospital", "root","");
//        } catch (Exception e) {
//    JOptionPane.showMessageDialog(null,e);
//    }
//        return con;
//    }
//        }
//    public ArrayList<City>getData(String city_name){
//
//    ArrayList<City> list = new ArrayList<City>();
//     
//    try {
//        Class.forName("com.mysql.jdbc.Driver");
//        Connection conn = (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3307/hospital","root","");
//        Statement st = conn.createStatement();
//        String sql ="SELECT `city_name`, `community`, `hospital`, `house` FROM `city` WHERE `city_name` = '"+city_name+"'";
//        ResultSet rs = st.executeQuery(sql);
//   
//        City c;
//        while(rs.next()){
//            c = new City(
//            rs.getString("city_name"),
//            rs.getString("community"),
//            rs.getString("Hospital"),
//            rs.getString("House")
//
//            );
//            list.add(c);
//        }
//   
//    } catch (Exception e) {
//    JOptionPane.showMessageDialog(null,e);
//    }
//    return list;
//    }
//    }
    
